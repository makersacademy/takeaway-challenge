##
# This code was generated by
# \ / _    _  _|   _  _
#  | (_)\/(_)(_|\/| |(/_  v1.0.0
#       /       /
# 
# frozen_string_literal: true

module Twilio
  module REST
    class Notify < Domain
      class V1 < Version
        class ServiceContext < InstanceContext
          ##
          # PLEASE NOTE that this class contains beta products that are subject to change. Use them with caution.
          class NotificationList < ListResource
            ##
            # Initialize the NotificationList
            # @param [Version] version Version that contains the resource
            # @param [String] service_sid The service_sid
            # @return [NotificationList] NotificationList
            def initialize(version, service_sid: nil)
              super(version)

              # Path Solution
              @solution = {service_sid: service_sid}
              @uri = "/Services/#{@solution[:service_sid]}/Notifications"
            end

            ##
            # Retrieve a single page of NotificationInstance records from the API.
            # Request is executed immediately.
            # @param [String] body (optional for all except Alexa) Indicates the notification
            #   body text. Translates to `data.twi_body` for FCM and GCM, `aps.alert.body` for
            #   APNS, `Body` for SMS and Facebook Messenger and `request.message.data` for
            #   Alexa.  For SMS either this, `body`, or the `media_url` attribute of the `Sms`
            #   parameter is required.  For Facebook Messenger either this parameter or the body
            #   attribute in the `FacebookMessenger` parameter is required.
            # @param [notification.Priority] priority Two priorities defined: `low` and `high`
            #   (default). `low` optimizes the client app's battery consumption, and
            #   notifications may be delivered with unspecified delay. This is the same as
            #   Normal priority for FCM and GCM or priority 5 for APNS. `high` sends the
            #   notification immediately, and can wake up a sleeping device. This is the same as
            #   High priority for FCM and GCM or priority 10 for APNS.  This feature is not
            #   supported by SMS and Facebook Messenger and will be ignored for deliveries via
            #   those channels.
            # @param [String] ttl This parameter specifies how long (in seconds) the
            #   notification is valid. Delivery should be attempted if the device is offline.
            #   The maximum time to live supported is 4 weeks. The value zero means that the
            #   notification delivery is attempted immediately once but not stored for future
            #   delivery. The default value is 4 weeks.  This feature is not supported by SMS
            #   and Facebook Messenger and will be ignored for deliveries via those channels.
            # @param [String] title (optional for all except Alexa) Indicates the notification
            #   title. This field is not visible on iOS phones and tablets but it is on Apple
            #   Watch and Android devices. Translates to `data.twi_title` for FCM and GCM,
            #   `aps.alert.title` for APNS and `displayInfo.content[0].title`,
            #   `displayInfo.content[].toast.primaryText` of `request.message` for Alexa. It is
            #   not supported for SMS and Facebook Messenger and will be omitted from deliveries
            #   via those channels.
            # @param [String] sound Indicates a sound to be played. Translates to
            #   `data.twi_sound` for FCM and GCM and `aps.sound` for APNS.  This parameter is
            #   not supported by SMS and Facebook Messenger and is omitted from deliveries via
            #   those channels.
            # @param [String] action Specifies the actions to be displayed for the
            #   notification. Translates to `data.twi_action` for GCM and `aps.category` for
            #   APNS.  This parameter is not supported by SMS and Facebook Messenger and is
            #   omitted from deliveries via those channels.
            # @param [Hash] data This parameter specifies the custom key-value pairs of the
            #   notification's payload. Translates to `data` dictionary in FCM and GCM payload.
            #   FCM and GCM [reserves certain
            #   keys](https://firebase.google.com/docs/cloud-messaging/http-server-ref) that
            #   cannot be used for those channels. For APNS, attributes of `Data` will be
            #   inserted into the APNS payload as custom properties outside of the `aps`
            #   dictionary. For Alexa they are added to `request.message.data`. For all
            #   channels, the `twi_` prefix is reserved for Twilio for future use. Requests
            #   including custom data with keys starting with `twi_` will be rejected as 400 Bad
            #   request and no delivery will be attempted.  This parameter is not supported by
            #   SMS and Facebook Messenger and is omitted from deliveries via those channels.
            # @param [Hash] apn APNS specific payload that overrides corresponding attributes
            #   in a generic payload for Bindings with the apn BindingType. This value is mapped
            #   to the Payload item, therefore the `aps` key has to be used to change standard
            #   attributes. Adds custom key-value pairs to the root of the dictionary. Refer to
            #   [APNS
            #   documentation](https://developer.apple.com/library/content/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/CommunicatingwithAPNs.html) for more details. The `twi_` key prefix for custom key-value pairs is reserved for Twilio for future use. Custom data with keys starting with `twi_` is not allowed.
            # @param [Hash] gcm GCM specific payload that overrides corresponding attributes
            #   in generic payload for Bindings with gcm BindingType.  This value is mapped to
            #   the root json dictionary. Refer to [GCM
            #   documentation](https://developers.google.com/cloud-messaging/http-server-ref)
            #   for more details.  Target parameters `to`, `registration_ids`, and
            #   `notification_key` are not allowed. The `twi_` key prefix for custom key-value
            #   pairs is reserved for Twilio for future use. Custom data with keys starting with
            #   `twi_` is not allowed. FCM and GCM [reserves certain
            #   keys](https://firebase.google.com/docs/cloud-messaging/http-server-ref) that
            #   cannot be used for those channels.
            # @param [Hash] sms SMS specific payload that overrides corresponding attributes
            #   in generic payload for Bindings with sms BindingType.  Each attribute in this
            #   JSON object is mapped to the corresponding form parameter of the Twilio
            #   [Message](https://www.twilio.com/docs/api/rest/sending-messages) resource.  The
            #   following parameters of the Message resource are supported in snake case format:
            #   `body`, `media_urls`, `status_callback`, and `max_price`.  The `status_callback`
            #   parameter overrides the corresponding parameter in the messaging service if
            #   configured. The `media_urls` expects a JSON array.
            # @param [Hash] facebook_messenger Messenger specific payload that overrides
            #   corresponding attributes in generic payload for Bindings with facebook-messenger
            #   BindingType.  This value is mapped to the root json dictionary of Facebook's
            #   [Send API
            #   request](https://developers.facebook.com/docs/messenger-platform/send-api-reference).  Overriding the `recipient` parameter is not allowed.
            # @param [Hash] fcm FCM specific payload that overrides corresponding attributes
            #   in generic payload for Bindings with fcm BindingType.  This value is mapped to
            #   the root json dictionary. Refer to [FCM
            #   documentation](https://firebase.google.com/docs/cloud-messaging/http-server-ref#downstream) for more details.  Target parameters `to`, `registration_ids`, `condition`, and `notification_key` are not allowed. The `twi_` key prefix for custom key-value pairs is reserved for Twilio for future use. Custom data with keys starting with `twi_` is not allowed. Custom data with keys starting with `twi_` is not allowed. FCM and GCM [reserves certain keys](https://firebase.google.com/docs/cloud-messaging/http-server-ref) that cannot be used for those channels.
            # @param [String] segment The segment
            # @param [Hash] alexa The alexa
            # @param [String] to_binding The destination address in a JSON object (see
            #   attributes below).  Multiple ToBinding parameters can be included but the total
            #   size of the request entity should not exceed 1MB. This is typically sufficient
            #   for 10,000 phone numbers. 
            # @param [String] identity Delivery will be attempted only to Bindings with an
            #   Identity in this list. Maximum 20 items allowed in this list.
            # @param [String] tag Delivery will be attempted only to Bindings that have all of
            #   the Tags in this list. Maximum 5 items allowed in this list. The implicit tag
            #   "all" is available to notify all Bindings in a Service instance. Similarly the
            #   implicit tags "apn", "fcm", "gcm", "sms" and "facebook-messenger" are available
            #   to notify all Bindings of the given type.
            # @return [NotificationInstance] Newly created NotificationInstance
            def create(body: :unset, priority: :unset, ttl: :unset, title: :unset, sound: :unset, action: :unset, data: :unset, apn: :unset, gcm: :unset, sms: :unset, facebook_messenger: :unset, fcm: :unset, segment: :unset, alexa: :unset, to_binding: :unset, identity: :unset, tag: :unset)
              data = Twilio::Values.of({
                  'Identity' => Twilio.serialize_list(identity) { |e| e },
                  'Tag' => Twilio.serialize_list(tag) { |e| e },
                  'Body' => body,
                  'Priority' => priority,
                  'Ttl' => ttl,
                  'Title' => title,
                  'Sound' => sound,
                  'Action' => action,
                  'Data' => Twilio.serialize_object(data),
                  'Apn' => Twilio.serialize_object(apn),
                  'Gcm' => Twilio.serialize_object(gcm),
                  'Sms' => Twilio.serialize_object(sms),
                  'FacebookMessenger' => Twilio.serialize_object(facebook_messenger),
                  'Fcm' => Twilio.serialize_object(fcm),
                  'Segment' => Twilio.serialize_list(segment) { |e| e },
                  'Alexa' => Twilio.serialize_object(alexa),
                  'ToBinding' => Twilio.serialize_list(to_binding) { |e| e },
              })

              payload = @version.create(
                  'POST',
                  @uri,
                  data: data
              )

              NotificationInstance.new(@version, payload, service_sid: @solution[:service_sid], )
            end

            ##
            # Provide a user friendly representation
            def to_s
              '#<Twilio.Notify.V1.NotificationList>'
            end
          end

          ##
          # PLEASE NOTE that this class contains beta products that are subject to change. Use them with caution.
          class NotificationPage < Page
            ##
            # Initialize the NotificationPage
            # @param [Version] version Version that contains the resource
            # @param [Response] response Response from the API
            # @param [Hash] solution Path solution for the resource
            # @return [NotificationPage] NotificationPage
            def initialize(version, response, solution)
              super(version, response)

              # Path Solution
              @solution = solution
            end

            ##
            # Build an instance of NotificationInstance
            # @param [Hash] payload Payload response from the API
            # @return [NotificationInstance] NotificationInstance
            def get_instance(payload)
              NotificationInstance.new(@version, payload, service_sid: @solution[:service_sid], )
            end

            ##
            # Provide a user friendly representation
            def to_s
              '<Twilio.Notify.V1.NotificationPage>'
            end
          end

          ##
          # PLEASE NOTE that this class contains beta products that are subject to change. Use them with caution.
          class NotificationInstance < InstanceResource
            ##
            # Initialize the NotificationInstance
            # @param [Version] version Version that contains the resource
            # @param [Hash] payload payload that contains response from Twilio
            # @param [String] service_sid The service_sid
            # @return [NotificationInstance] NotificationInstance
            def initialize(version, payload, service_sid: nil)
              super(version)

              # Marshaled Properties
              @properties = {
                  'sid' => payload['sid'],
                  'account_sid' => payload['account_sid'],
                  'service_sid' => payload['service_sid'],
                  'date_created' => Twilio.deserialize_iso8601_datetime(payload['date_created']),
                  'identities' => payload['identities'],
                  'tags' => payload['tags'],
                  'segments' => payload['segments'],
                  'priority' => payload['priority'],
                  'ttl' => payload['ttl'].to_i,
                  'title' => payload['title'],
                  'body' => payload['body'],
                  'sound' => payload['sound'],
                  'action' => payload['action'],
                  'data' => payload['data'],
                  'apn' => payload['apn'],
                  'gcm' => payload['gcm'],
                  'fcm' => payload['fcm'],
                  'sms' => payload['sms'],
                  'facebook_messenger' => payload['facebook_messenger'],
                  'alexa' => payload['alexa'],
              }
            end

            ##
            # @return [String] The sid
            def sid
              @properties['sid']
            end

            ##
            # @return [String] The account_sid
            def account_sid
              @properties['account_sid']
            end

            ##
            # @return [String] The service_sid
            def service_sid
              @properties['service_sid']
            end

            ##
            # @return [Time] The date_created
            def date_created
              @properties['date_created']
            end

            ##
            # @return [String] List of Identities.
            def identities
              @properties['identities']
            end

            ##
            # @return [String] List of Tags
            def tags
              @properties['tags']
            end

            ##
            # @return [String] The segments
            def segments
              @properties['segments']
            end

            ##
            # @return [notification.Priority] Two priorities defined: low and high.
            def priority
              @properties['priority']
            end

            ##
            # @return [String] This parameter specifies how long the notification is valid.
            def ttl
              @properties['ttl']
            end

            ##
            # @return [String] Indicates the notification title.
            def title
              @properties['title']
            end

            ##
            # @return [String] Indicates the notification body text.
            def body
              @properties['body']
            end

            ##
            # @return [String] Indicates a sound to be played.
            def sound
              @properties['sound']
            end

            ##
            # @return [String] Specifies the actions to be displayed for the notification.
            def action
              @properties['action']
            end

            ##
            # @return [Hash] This parameter specifies the custom key-value pairs of the notification's payload.
            def data
              @properties['data']
            end

            ##
            # @return [Hash] APNS specific payload that overrides corresponding attributes in a generic payload for Bindings with the apn BindingType.
            def apn
              @properties['apn']
            end

            ##
            # @return [Hash] GCM specific payload that overrides corresponding attributes in generic payload for Bindings with gcm BindingType.
            def gcm
              @properties['gcm']
            end

            ##
            # @return [Hash] FCM specific payload that overrides corresponding attributes in generic payload for Bindings with fcm BindingType.
            def fcm
              @properties['fcm']
            end

            ##
            # @return [Hash] SMS specific payload that overrides corresponding attributes in generic payload for Bindings with sms BindingType.
            def sms
              @properties['sms']
            end

            ##
            # @return [Hash] Messenger specific payload that overrides corresponding attributes in generic payload for Bindings with facebook-messenger BindingType.
            def facebook_messenger
              @properties['facebook_messenger']
            end

            ##
            # @return [Hash] The alexa
            def alexa
              @properties['alexa']
            end

            ##
            # Provide a user friendly representation
            def to_s
              "<Twilio.Notify.V1.NotificationInstance>"
            end

            ##
            # Provide a detailed, user friendly representation
            def inspect
              "<Twilio.Notify.V1.NotificationInstance>"
            end
          end
        end
      end
    end
  end
end